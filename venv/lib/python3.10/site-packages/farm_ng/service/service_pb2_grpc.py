# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from farm_ng.service import service_pb2 as farm__ng_dot_service_dot_service__pb2


class ServiceBaseStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getServiceState = channel.unary_unary(
                '/farm_ng.service.proto.ServiceBase/getServiceState',
                request_serializer=farm__ng_dot_service_dot_service__pb2.GetServiceStateRequest.SerializeToString,
                response_deserializer=farm__ng_dot_service_dot_service__pb2.GetServiceStateReply.FromString,
                )


class ServiceBaseServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getServiceState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceBaseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getServiceState': grpc.unary_unary_rpc_method_handler(
                    servicer.getServiceState,
                    request_deserializer=farm__ng_dot_service_dot_service__pb2.GetServiceStateRequest.FromString,
                    response_serializer=farm__ng_dot_service_dot_service__pb2.GetServiceStateReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'farm_ng.service.proto.ServiceBase', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceBase(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getServiceState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farm_ng.service.proto.ServiceBase/getServiceState',
            farm__ng_dot_service_dot_service__pb2.GetServiceStateRequest.SerializeToString,
            farm__ng_dot_service_dot_service__pb2.GetServiceStateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
